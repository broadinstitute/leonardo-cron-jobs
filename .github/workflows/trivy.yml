name: dsp-appsec-trivy
on: [pull_request]

jobs:
  appsec-trivy:
    # Parse Dockerfile and build, scan image if a "blessed" base image is not used
    name: DSP AppSec Trivy check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project:
        - resourceValidator
        - zombieMonitor
        - janitor

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'


      # fetch SBT package
#      - uses: olafurpg/setup-scala@v10

      # set up SBT cache
#      - uses: actions/cache@v2
#        with:
#          path: |
#            ~/.cache
#            ~/.coursier/cache
#            ~/.ivy2/cache
#            ~/.sbt
#          key: sbt-${{ matrix.project }}-${{ hashFiles('**/*.sbt') }}
#          restore-keys: |
#            sbt-${{ matrix.project }}-
#            sbt-

      - name: Setup Cache
        uses: coursier/cache-action@v5
      - name: Cache resources
        run: |
          rm -rf "$HOME/.ivy2/local" || true
          find $HOME/Library/Caches/Coursier/v1        -name "ivydata-*.properties" -delete || true
          find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
          find $HOME/.cache/coursier/v1                -name "ivydata-*.properties" -delete || true
          find $HOME/.sbt                              -name "*.lock"               -delete || true

      # build the image
      - name: Build
        id: build
        run: |
          set -o pipefail

          # build sources and store the log
          sbt -no-colors ${{ matrix.project }}/docker:publishLocal | tee build.log

          # export image name from the log
          image=$(grep 'Successfully tagged' build.log | awk '{print $NF}')
          echo "::set-output name=image::${image}"

      # scan the image
      - uses: broadinstitute/dsp-appsec-trivy-action@v1
        with:
          image: ${{ steps.build.outputs.image }}
